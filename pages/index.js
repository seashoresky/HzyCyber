import Head from 'next/head'
import { useForm } from 'react-hook-form'
import axios from 'axios'
import { useEffect, useState } from 'react'
import { Button, Modal } from 'antd';
import 'antd/dist/antd.css'
import { useRouter } from 'next/router';

export default function Home() {
  const router = useRouter()
  const [ip, setIp] = useState('http://localhost:3000/api')
  const getInstantIP = (e) => {
    setIp(e.target.value)
  }
  const { 
    register, // register用于注册input,以便验证是否填了
    handleSubmit, 
    formState:{errors}
  } = useForm() 

  const welcome = async () => {
    const msg =  await getMsg()
    console.log(msg)
     Modal.success({
       content: msg,
     });
   };  
  const getMsg = async () => { 
    try {
      console.log(ip)
      const res = await axios.get(`${ip}/ping`)
      return res.data.data.msg
    } catch {
      err => console.log(err)
    }
  }
  //点击提交登录
  const login = async (data) => {
    let formedData = {
      id: data.id
    }
    try {
      const res = await axios.post(`${data.ip}/join`, formedData)
      if (res.data.code === 0) {
        const token = res.data.data.user_token
        if(token) {
          router.push('/game')
        }
        console.log(res)
      } else if(res.data.code === 100){
        Modal.warning({
          content: 'QAQ抱歉了，房间里已经有两个人在博弈了，麻烦同学稍等下~',
        });
      } else if(res.data.code === 102) {
        Modal.success({
          content: '恭喜同学成功进入对局，但请等下对局的小伙伴上线哦',
        });
      }
    } catch {
      err => console.log(err)
    }
  }
  return (
    <div className="h-screen grid place-content-center
    bg-[url('../static/BG.jpeg')] bg-cover">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* form毛玻璃效果, hover时更加模糊，纵列flex布局 */}

      <form className='w-[26rem] flex flex-col shadow border-none px-9 py-14
        rounded-2xl backdrop-blur-md bg-gray-300/20 hover:bg-white/20 backdrop-opacity-95 hover:backdrop-opacity-100 transition ease-in-out delay-300'
        onSubmit={handleSubmit(login)}  
      >
        <h1 className='text-2xl font-medium text-gray-200'>请输入服务器IP和用户名哦</h1>
        <hr className='py-3 mt-2'/>
        <label className='block mb-5'>
          <span className='text-white'>服务器 IP</span>
          {/* hover时input框背景渐变 focus时出现ring */}
          <input
            {...register('ip', { required: true})}
            onChange={getInstantIP}
            defaultValue='http://localhost:3000/api'
            className='border shadow rounded py-2 px-3 block w-full mt-1
              ring-blue-400 outline-none focus:ring transition ease-in-out delay-150
              backdrop-opacity-80 bg-white/70 hover:bg-white/100 backdrop-blur-xl'
            placeholder='https://localhost:3000/api'
            type='text'
          />
        </label>
        <label className='block mb-10'>
          <span className='text-white'>用户名</span>
          <input
            {...register('id', { required: true})}
            className='border shadow rounded py-2 px-3 block w-full mt-1
              ring-blue-400 outline-none focus:ring transition ease-in-out delay-150
              backdrop-opacity-80 bg-white/70 hover:bg-white/100 backdrop-blur-xl'
            placeholder='例：QSCTech'
            type='text'
          />
        </label>
        <div className='flex justify-center space-x-5'>
          <input 
            type="submit" 
            value='开始博弈'
            className='shadow mx-auto bg-red-500 hover:bg-red-700 transition ease-in-out delay-200
            focus:outline-none text-white font-bold py-2 px-4 rounded cursor-pointer w-1/2 h-10'		
          />
          <Button
            onClick={welcome}
            className='shadow border py-2 px-4 rounded text-white decoration-0 font-bold w-1/2
              focus:outline-none transition ease-in-out delay-200
              h-10 border-none backdrop-opacity-80 bg-red-500  hover:bg-red-700 backdrop-blur-xl' 
            >
            检查通信
          </Button>
        </div>
          {/* 对于提交的form数据进行验证，name和id必须要填 */}
        {errors.ip && (
          <span className='text-red-700 block mt-4 text-lg font-bold'> 
            - 啊 服务器地址你不写的吗
          </span>
        )}
        {errors.id && (
          <span className='text-red-700 block text-lg font-bold mt-4'> 
            - 啊 用户名也要写的唉
          </span>
        )}
      </form>
    </div>
  )
}
